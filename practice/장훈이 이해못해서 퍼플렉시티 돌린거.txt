길이 


height = [299, 239, 116, 128]
N, B = 4, 416

def human_tower(level, total_height):
    # 이 모든 걸 겪고도 B에 도달하지 못했다면,
    if total_height < B and level == len(height) - 1:
        return -1

    # 중단 조건은 일단 이 total_height이 B에 도달했을 때임
    if total_height >= B:
        return
    # 이 재귀함수는 각 레벨에서 점원을 넣느냐, 안넣느냐 두 개 뿐이지?
    # 그니깐 이 레벨에서 키를 더해주고 말고
    human_tower(level + 1, total_height + height[level])
    human_tower(level + 1, total_height)

    # 근데 이러면 그냥 커질때만 리턴이니깐,, 가장 작은 min을 만들고 싶을 때는 어떻게 해야할까?

height의 합이 B이상이 되어야 하는데, 그 합 들 중 최솟값을 구하는 함수를 만들고 싶음 
여기서 어떻게 수정하면 좋을까
어떻게 해야 재귀함수 한 번 호출할 때 최솟값인지 거르면서 최솟값이 아닌 애들은 제거하고 넘어가는 로직을 짤 수 있을까
딱 힌트만 줬으면 좋겠어 



이 문제는 최소 합계를 찾는 재귀 함수를 설계하는 것이 핵심입니다. 현재 코드에서 몇 가지 중요한 수정이 필요합니다:
재귀 함수가 값을 반환하도록 수정해야 합니다. 현재는 값을 반환하지 않고 있습니다.
각 재귀 호출에서 두 가지 선택(현재 높이를 더하거나 더하지 않거나)의 결과 중 더 작은 값을 선택해야 합니다.
기저 조건에서는 적절한 값을 반환해야 합니다.

힌트:
재귀 함수가 "가능한 최소 합계"를 반환하도록 설계하세요.
불가능한 경우를 표현하기 위해 매우 큰 값(예: float('inf'))을 사용하세요.
두 재귀 호출의 결과 중 더 작은 값을 선택하는 min() 함수를 활용하세요.
기저 조건에서 B 이상인 경우 현재 합계를 반환하고, 불가능한 경우 무한대를 반환하세요.